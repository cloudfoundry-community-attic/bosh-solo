#!/usr/bin/env bash

# Iterates through each examples/*yml to ensure that it is a valid example for this boshrelease;
# or that the bosh release still works against all expected examples.

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

[ "$(whoami)" != 'root' ] && ( echo ERROR: run as root user; exit 1 )

release_path=$(pwd)
scripts=${release_path}/bin

examples=$(ls -R ${release_path}/examples/*.yml)

echo "|"
echo "| Stopping any existing jobs"
echo "|"
${scripts}/stop

for example in ${examples}
do
  echo "|"
  echo "| Testing configuration template rendering:"
  echo "| * ${example}"
  echo "|"
  ${scripts}/configure ${example}
done

# TODO - there is no test/assertion below
# Perhaps put "ps ax" expectations in the examples/*.yml?
#
#  expected_process='puma --pidfile /var/vcap/sys/run/webapp/webapp.pid -p 5000 -t 0:20'
#  ps ax | grep "${expected_process}" | grep -v 'grep'
for example in ${examples}
do
  echo "|"
  echo "| Testing full update & start sequences:"
  echo "| * ${example}"
  echo "|"
  ${scripts}/update ${example}
done